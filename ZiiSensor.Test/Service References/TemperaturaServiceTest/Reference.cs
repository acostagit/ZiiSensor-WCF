//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZiiSensor.Test.TemperaturaServiceTest {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperaturaTO", Namespace="http://schemas.datacontract.org/2004/07/ZiiSensor.Contratos.Temperatura")]
    [System.SerializableAttribute()]
    public partial class TemperaturaTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataHoraInclusaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HumidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDDispositivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemperaturaAtualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemperaturaMaximaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemperaturaMinimaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataHoraInclusao {
            get {
                return this.DataHoraInclusaoField;
            }
            set {
                if ((this.DataHoraInclusaoField.Equals(value) != true)) {
                    this.DataHoraInclusaoField = value;
                    this.RaisePropertyChanged("DataHoraInclusao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Humidade {
            get {
                return this.HumidadeField;
            }
            set {
                if ((this.HumidadeField.Equals(value) != true)) {
                    this.HumidadeField = value;
                    this.RaisePropertyChanged("Humidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDDispositivo {
            get {
                return this.IDDispositivoField;
            }
            set {
                if ((this.IDDispositivoField.Equals(value) != true)) {
                    this.IDDispositivoField = value;
                    this.RaisePropertyChanged("IDDispositivo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemperaturaAtual {
            get {
                return this.TemperaturaAtualField;
            }
            set {
                if ((this.TemperaturaAtualField.Equals(value) != true)) {
                    this.TemperaturaAtualField = value;
                    this.RaisePropertyChanged("TemperaturaAtual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemperaturaMaxima {
            get {
                return this.TemperaturaMaximaField;
            }
            set {
                if ((this.TemperaturaMaximaField.Equals(value) != true)) {
                    this.TemperaturaMaximaField = value;
                    this.RaisePropertyChanged("TemperaturaMaxima");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemperaturaMinima {
            get {
                return this.TemperaturaMinimaField;
            }
            set {
                if ((this.TemperaturaMinimaField.Equals(value) != true)) {
                    this.TemperaturaMinimaField = value;
                    this.RaisePropertyChanged("TemperaturaMinima");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemperaturaServiceTest.ITemperaturaServico")]
    public interface ITemperaturaServico {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/Adicionar", ReplyAction="http://tempuri.org/ITemperaturaServico/AdicionarResponse")]
        void Adicionar(ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO temperaturaDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/Adicionar", ReplyAction="http://tempuri.org/ITemperaturaServico/AdicionarResponse")]
        System.Threading.Tasks.Task AdicionarAsync(ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO temperaturaDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterTodos", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterTodosResponse")]
        ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[] ObterTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterTodos", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterTodosResponse")]
        System.Threading.Tasks.Task<ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[]> ObterTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterPorID", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterPorIDResponse")]
        ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[] ObterPorID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterPorID", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterPorIDResponse")]
        System.Threading.Tasks.Task<ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[]> ObterPorIDAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITemperaturaServicoChannel : ZiiSensor.Test.TemperaturaServiceTest.ITemperaturaServico, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperaturaServicoClient : System.ServiceModel.ClientBase<ZiiSensor.Test.TemperaturaServiceTest.ITemperaturaServico>, ZiiSensor.Test.TemperaturaServiceTest.ITemperaturaServico {
        
        public TemperaturaServicoClient() {
        }
        
        public TemperaturaServicoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperaturaServicoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperaturaServicoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperaturaServicoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Adicionar(ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO temperaturaDTO) {
            base.Channel.Adicionar(temperaturaDTO);
        }
        
        public System.Threading.Tasks.Task AdicionarAsync(ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO temperaturaDTO) {
            return base.Channel.AdicionarAsync(temperaturaDTO);
        }
        
        public ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[] ObterTodos() {
            return base.Channel.ObterTodos();
        }
        
        public System.Threading.Tasks.Task<ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[]> ObterTodosAsync() {
            return base.Channel.ObterTodosAsync();
        }
        
        public ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[] ObterPorID(int id) {
            return base.Channel.ObterPorID(id);
        }
        
        public System.Threading.Tasks.Task<ZiiSensor.Test.TemperaturaServiceTest.TemperaturaTO[]> ObterPorIDAsync(int id) {
            return base.Channel.ObterPorIDAsync(id);
        }
    }
}
