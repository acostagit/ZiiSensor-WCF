//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZiiSensor.UI.TemperaturaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemperaturaService.ITemperaturaServico")]
    public interface ITemperaturaServico {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/Adicionar", ReplyAction="http://tempuri.org/ITemperaturaServico/AdicionarResponse")]
        void Adicionar(ZiiSensor.Contratos.Temperatura.TemperaturaTO temperaturaDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/Adicionar", ReplyAction="http://tempuri.org/ITemperaturaServico/AdicionarResponse")]
        System.Threading.Tasks.Task AdicionarAsync(ZiiSensor.Contratos.Temperatura.TemperaturaTO temperaturaDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterTodos", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterTodosResponse")]
        ZiiSensor.Contratos.Temperatura.TemperaturaTO[] ObterTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterTodos", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterTodosResponse")]
        System.Threading.Tasks.Task<ZiiSensor.Contratos.Temperatura.TemperaturaTO[]> ObterTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterPorID", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterPorIDResponse")]
        ZiiSensor.Contratos.Temperatura.TemperaturaTO[] ObterPorID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaServico/ObterPorID", ReplyAction="http://tempuri.org/ITemperaturaServico/ObterPorIDResponse")]
        System.Threading.Tasks.Task<ZiiSensor.Contratos.Temperatura.TemperaturaTO[]> ObterPorIDAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITemperaturaServicoChannel : ZiiSensor.UI.TemperaturaService.ITemperaturaServico, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperaturaServicoClient : System.ServiceModel.ClientBase<ZiiSensor.UI.TemperaturaService.ITemperaturaServico>, ZiiSensor.UI.TemperaturaService.ITemperaturaServico {
        
        public TemperaturaServicoClient() {
        }
        
        public TemperaturaServicoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperaturaServicoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperaturaServicoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperaturaServicoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Adicionar(ZiiSensor.Contratos.Temperatura.TemperaturaTO temperaturaDTO) {
            base.Channel.Adicionar(temperaturaDTO);
        }
        
        public System.Threading.Tasks.Task AdicionarAsync(ZiiSensor.Contratos.Temperatura.TemperaturaTO temperaturaDTO) {
            return base.Channel.AdicionarAsync(temperaturaDTO);
        }
        
        public ZiiSensor.Contratos.Temperatura.TemperaturaTO[] ObterTodos() {
            return base.Channel.ObterTodos();
        }
        
        public System.Threading.Tasks.Task<ZiiSensor.Contratos.Temperatura.TemperaturaTO[]> ObterTodosAsync() {
            return base.Channel.ObterTodosAsync();
        }
        
        public ZiiSensor.Contratos.Temperatura.TemperaturaTO[] ObterPorID(int id) {
            return base.Channel.ObterPorID(id);
        }
        
        public System.Threading.Tasks.Task<ZiiSensor.Contratos.Temperatura.TemperaturaTO[]> ObterPorIDAsync(int id) {
            return base.Channel.ObterPorIDAsync(id);
        }
    }
}
